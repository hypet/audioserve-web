/* tslint:disable */
/* eslint-disable */
/**
 * audioserve API
 * REST API for audioserve
 *
 * The version of the OpenAPI document: 1.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Transcoding } from './Transcoding';
import {
    TranscodingFromJSON,
    TranscodingFromJSONTyped,
    TranscodingToJSON,
} from './Transcoding';

/**
 * 
 * @export
 * @interface TranscodingsInfo
 */
export interface TranscodingsInfo {
    /**
     * 
     * @type {Transcoding}
     * @memberof TranscodingsInfo
     */
    high?: Transcoding;
    /**
     * 
     * @type {Transcoding}
     * @memberof TranscodingsInfo
     */
    low?: Transcoding;
    /**
     * 
     * @type {Transcoding}
     * @memberof TranscodingsInfo
     */
    medium?: Transcoding;
    /**
     * Maximum number of parallel transcodings allowed by server
     * @type {number}
     * @memberof TranscodingsInfo
     */
    maxTranscodings?: number;
}

/**
 * Check if a given object implements the TranscodingsInfo interface.
 */
export function instanceOfTranscodingsInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TranscodingsInfoFromJSON(json: any): TranscodingsInfo {
    return TranscodingsInfoFromJSONTyped(json, false);
}

export function TranscodingsInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranscodingsInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'high': !exists(json, 'high') ? undefined : TranscodingFromJSON(json['high']),
        'low': !exists(json, 'low') ? undefined : TranscodingFromJSON(json['low']),
        'medium': !exists(json, 'medium') ? undefined : TranscodingFromJSON(json['medium']),
        'maxTranscodings': !exists(json, 'max_transcodings') ? undefined : json['max_transcodings'],
    };
}

export function TranscodingsInfoToJSON(value?: TranscodingsInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'high': TranscodingToJSON(value.high),
        'low': TranscodingToJSON(value.low),
        'medium': TranscodingToJSON(value.medium),
        'max_transcodings': value.maxTranscodings,
    };
}

